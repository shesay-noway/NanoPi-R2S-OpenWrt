name: lean's openwrt from chuck

# Copyright (c) 2020, Chuck <fanck0605@qq.com>
#
# 警告:
# 对着屏幕的哥们, 我们允许你使用此脚本, 但不允许你抹去作者的信息, 请保留这段话.
# 你可以随意使用本脚本的代码, 但请注明出处.
#

on:
  push:
    branches:
      - master
    paths:
      - 'actionStart_chuck'
  schedule:
    - cron: '00 08 * * 5'

env:
  TZ: Asia/Shanghai

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.repository == 'msylgj/NanoPi-R2S-OpenWrt'

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      # refer to klever1988/nanopi-openwrt and soffchen/NanoPi-R2S
      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          sudo docker image prune -a -f
          sudo apt-get update
          sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

      - name: Install Repo
        run: |
          rm -rf repo
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          rm -rf repo

      - name: Initialization Source
        run: |
          rm -rf rk3328 && mkdir rk3328 && cd rk3328
          repo init -u https://github.com/fanck0605/friendlywrt_mainfests -b master-lean -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      # refer to coolsnowwolf/lede
      - name: Unlock some OpenWrt feeds
        run: |
          cd rk3328/friendlywrt
          sed -i 's/#src-git/src-git/g' ./feeds.conf.default

      # default version contains some bug
      - name: Upgrade Argon Theme
        run: |
          cd rk3328/friendlywrt/package/lean
          rm -rf luci-theme-argon
          git clone --depth 1 -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git

      # refer to klever1988/nanopi-openwrt, modified by Chuck <fanck0605@qq.com>
      - name: Install Openwrt patches
        run: |
          rm -rf openwrt
          git clone --depth 1 -b master https://github.com/openwrt/openwrt.git
          cd openwrt
          ./scripts/patch-kernel.sh ../rk3328/kernel ./target/linux/generic/backport-5.4
          ./scripts/patch-kernel.sh ../rk3328/kernel ./target/linux/generic/pending-5.4
          ./scripts/patch-kernel.sh ../rk3328/kernel ./target/linux/generic/hack-5.4
          cp -a ./target/linux/generic/files/* ../rk3328/kernel/
          cd ../ && rm -rf openwrt

      # refer to klever1988/nanopi-openwrt, modified by Chuck <fanck0605@qq.com>
      - name: Enable Kernel futures
        run: |
          cd rk3328/kernel/
          wget -O net/netfilter/xt_FULLCONENAT.c https://raw.githubusercontent.com/Chion82/netfilter-full-cone-nat/master/xt_FULLCONENAT.c
          git apply ../../patches/001-kernel-add-full_cone_nat.patch
          wget https://github.com/armbian/build/raw/master/patch/kernel/rockchip64-dev/RK3328-enable-1512mhz-opp.patch
          git apply RK3328-enable-1512mhz-opp.patch
          cat ../../config/nanopi-r2_linux_defconfig > ./arch/arm64/configs/nanopi-r2_linux_defconfig

      # 无线wifi支持,需要的话删除下面一行前面#号即可
      - name: Customize Configuration
        run: |
          cat ./config/config_rk3328_chuck.seed > rk3328/configs/config_rk3328
          #cat ./config/config_usb-net_chuck.seed > rk3328/configs/config_rk3328
          cd rk3328/friendlywrt
          sed -i "s/OpenWrt/Built by OPoA($(date +%Y.%m.%d)) @ OpenWrt/g" package/lean/default-settings/files/zzz-default-settings
          sed -i "/FriendlyWRT/a\ OPoA Build" package/base-files/files/etc/banner
          sed -i '/uci commit luci/a\uci commit firewall' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci set firewall.@zone[1].forward=REJECT' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci set firewall.@zone[1].input=REJECT' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci commit network' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci delete network.lan.ip6assign' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci delete network.wan6' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci commit dropbear' package/lean/default-settings/files/zzz-default-settings
          sed -i '/uci commit luci/a\uci set dropbear.@dropbear[0].Interface='lan'' package/lean/default-settings/files/zzz-default-settings
          sed -i '/distfeeds/i\sed -i '/target/d' /etc/opkg/distfeeds.conf' package/lean/default-settings/files/zzz-default-settings
          sed -i '/distfeeds/i\sed -i '/helloworld/d' /etc/opkg/distfeeds.conf' package/lean/default-settings/files/zzz-default-settings
          sed -i 's/mirrors.tuna.tsinghua.edu.cn/mirrors.cloud.tencent.com/g' package/lean/default-settings/files/zzz-default-settings
          mv ../../scripts/autoupdate_tracker.sh package/base-files/files/usr/bin && chmod +x package/base-files/files/usr/bin/autoupdate_tracker.sh
          mv ../../scripts/autoupdate.sh package/base-files/files/root/au.sh && chmod +x package/base-files/files/root/au.sh

      - name: Swap wan and lan
        run: |
          cd rk3328/friendlywrt
          git apply ../../patches/003-openwrt-swap-wan-and-lan.patch

      - name: Add OPKG Feeds
        run: |
          cd rk3328
          git clone -b src --depth 1 https://github.com/songchenwen/nanopi-r2s-opkg-feeds.git
          mkdir -p friendlywrt/package/base-files/files/etc/opkg/keys/
          cp nanopi-r2s-opkg-feeds/keys/* friendlywrt/package/base-files/files/etc/opkg/keys/
          rm -rf nanopi-r2s-opkg-feeds
          echo "grep -qF 'songchenwen.com' /etc/opkg/customfeeds.conf || echo 'src/gz r2s_targets_scw https://songchenwen.com/nanopi-r2s-opkg-feeds/packages' >> /etc/opkg/customfeeds.conf" >> friendlywrt/package/base-files/files/root/setup.sh

      - name: Build FriendlyWrt
        run: |
          cd rk3328
          ./build.sh nanopi_r2s.mk

      - name: Fix FriendlyWrt rootfs owner and group
        run: |
          sudo df -lh
          lodev=$(sudo losetup -f)
          echo "found unused loop dev $lodev"
          sudo losetup -P ${lodev} rk3328/out/FriendlyWrt*.img
          sudo rm -rf /mnt/friendlywrt-tmp
          sudo mkdir -p /mnt/friendlywrt-tmp
          sudo mount ${lodev}p1 /mnt/friendlywrt-tmp
          sudo chown -R root:root /mnt/friendlywrt-tmp
          sudo umount /mnt/friendlywrt-tmp
          sudo losetup -d ${lodev}

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          gzip rk3328/out/FriendlyWrt*.img
          cp rk3328/out/FriendlyWrt*.img.gz ./artifact/

      - name: Save Configurations
        id: save_config
        run: |
          cd rk3328/friendlywrt
          ./scripts/diffconfig.sh > ../../artifact/config-lite
          cp .config ../../artifact/config-full
          cd ../kernel
          export PATH=/opt/FriendlyARM/toolchain/6.4-aarch64/bin/:$PATH
          export CROSS_COMPILE='aarch64-linux-gnu-'
          export ARCH=arm64
          make savedefconfig
          cp .config ../../artifact/kconfig-full
          cp defconfig ../../artifact/kconfig-lite
          cd ../../
          zip -r artifact.zip ./artifact/
          release_tag="R2S-OPoA-Chuck-$(date +%Y-%m-%d)"
          echo "##[set-output name=release_tag;]$release_tag"

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.save_config.outputs.release_tag }}-ROM
          path: ./artifact.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.workflow_token }}
        with:
          tag_name: ${{ steps.save_config.outputs.release_tag }}
          release_name: 测试发布版本 ${{ steps.save_config.outputs.release_tag }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.workflow_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./artifact.zip
          asset_name: ${{ steps.save_config.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip
